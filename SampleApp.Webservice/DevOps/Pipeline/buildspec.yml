version: 0.2

phases:
  pre_build:
    commands:
      - chmod +x ./mvnw
      - chmod +x ./SampleApp.Webservice/DevOps/Scripts/*
      - echo Fetching version of SampleApp.Cli...
      - IMAGE_TAG=$(python ./SampleApp.Webservice/DevOps/Scripts/get_version.py)
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the JAR...
      - ./mvnw install
      - echo Building the Docker image...          
      - |
        docker build -f SampleApp.Webservice/DevOps/Docker/DockerFile \
        --build-arg AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID \
        --build-arg AWS_REGION=$AWS_DEFAULT_REGION \
        --build-arg VERSION=$IMAGE_TAG \
        -t $ECR_REPO:$IMAGE_TAG .
      - docker tag $ECR_REPO:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
      - echo Creating new task definition and service using latest image...
      - |
        ./SampleApp.Webservice/DevOps/Scripts/deploy_cf_stack.sh \
          SampleApp.Webservice/DevOps/AWS \
          ECSService \
          $ENVIRONMENT-sample-app-api-webservice \
          "ProjectPrefix=sample-app-api Environment=$ENVIRONMENT ECRRepoUri=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG PublicSubnet1Id=/org/$ENVIRONMENT/public-subnet-1-id PublicSubnet2Id=/org/$ENVIRONMENT/public-subnet-2-id VpcId=/org/$ENVIRONMENT/vpc-id Certificate=$CERTIFICATE ELBCanonicalHostedZoneId=/org/$ENVIRONMENT/elb/shared-elb-canonical-hosted-zone-id HostedZoneId=/org/hosted-zone-id ELBDNSName=/org/$ENVIRONMENT/elb/shared-elb-dns-name ELBListenerArn=/org/$ENVIRONMENT/elb/shared-elb-listener-arn ELBSecurityGroupId=/org/$ENVIRONMENT/elb/shared-elb-security-group-id" \
          "Environment=$ENVIRONMENT Contact=user@random.com" \
          org-cf-deploy-bucket
      - echo Finished deploying SampleApp webservice to ECS